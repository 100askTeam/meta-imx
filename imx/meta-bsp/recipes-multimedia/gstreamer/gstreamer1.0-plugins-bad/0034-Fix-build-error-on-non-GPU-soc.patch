From 48c5a54581bfe2ece196bd3218c774b09f6e4863 Mon Sep 17 00:00:00 2001
From: Haihua Hu <jared.hu@nxp.com>
Date: Fri, 12 Aug 2016 16:13:05 +0800
Subject: [PATCH] [MMFMWK-7308] Fix build issue on non-GPU soc.

1.Add directviv and g2d check in configure.ac
2.Add compile marcos in glupload and gldownload

Upstream-Status: Inappropriate [i.MX specific]

Signed-off-by: Haihua Hu <jared.hu@nxp.com>
---
 configure.ac                      | 27 ++++++++++++++++++++++++++-
 ext/gl/gstgldownloadelement.c     | 12 ++++++++++--
 gst-libs/gst/gl/Makefile.am       | 22 ++++++++++++++++++----
 gst-libs/gst/gl/gstglbufferpool.c |  2 ++
 gst-libs/gst/gl/gstglupload.c     | 12 ++++++++++--
 5 files changed, 66 insertions(+), 9 deletions(-)

diff --git a/configure.ac b/configure.ac
index d59bd10..6c3db50 100644
--- a/configure.ac
+++ b/configure.ac
@@ -682,7 +682,9 @@ save_LIBS="$LIBS"
 HAVE_GL=no
 HAVE_GLES2=no
 HAVE_WAYLAND_EGL=no
-HAV_FB_EGL=no
+HAVE_FB_EGL=no
+HAVE_DIRECTVIV=no
+HAVE_G2D=no
 
 HAVE_EGL_RPI=no
 
@@ -781,7 +783,11 @@ case $host in
     CFLAGS=$old_CFLAGS
 
     PKG_CHECK_MODULES(WAYLAND_EGL, wayland-client >= 1.0 wayland-cursor >= 1.0 wayland-egl >= 1.0, HAVE_WAYLAND_EGL=yes, HAVE_WAYLAND_EGL=no)
+
+    dnl specific check for imx soc
     AC_CHECK_LIB(EGL, fbGetDisplay, HAVE_FB_EGL=yes, HAVE_FB_EGL=no)
+    AC_CHECK_LIB(GLESv2, glTexDirectVIV, HAVE_DIRECTVIV=yes, HAVE_DIRECTVIV=no)
+    AC_CHECK_HEADER(g2d.h, HAVE_G2D=yes, HAVE_G2D=no)
   ;;
 esac
 
@@ -818,6 +824,18 @@ if test "x$HAVE_GLES2" = "xno"; then
   fi
 fi
 
+dnl specific for imx soc
+GST_GL_HAVE_DIRECTVIV=0
+GST_GL_HAVE_PHYMEM=0
+if test "x$HAVE_DIRECTVIV" = "xyes"; then
+  GST_GL_HAVE_DIRECTVIV=1
+  if test "x$HAVE_G2D" = "xyes"; then
+    GST_GL_HAVE_PHYMEM=1
+  else
+    AC_MSG_WARN([Physical memory do not support])
+  fi
+fi
+
 dnl X, GLX and OpenGL
 if test "x$HAVE_X" = "xno"; then
   if test "x$NEED_GLX" = "xyes"; then
@@ -1263,6 +1281,8 @@ GL_CONFIG_DEFINES="$GL_CONFIG_DEFINES
 
 GL_CONFIG_DEFINES="$GL_CONFIG_DEFINES
 #define GST_GL_HAVE_DMABUF $GST_GL_HAVE_DMABUF
+#define GST_GL_HAVE_DIRECTVIV $GST_GL_HAVE_DIRECTVIV
+#define GST_GL_HAVE_PHYMEM $GST_GL_HAVE_PHYMEM
 "
 
 dnl Check for no platforms/window systems
@@ -1298,6 +1318,9 @@ if test "x$GL_APIS" = "x" -o "x$GL_PLATFORMS" = "x" -o "x$GL_WINDOWS" = "x"; the
   HAVE_WINDOW_COCOA=no
   HAVE_WINDOW_EAGL=no
   HAVE_WINDOW_FB=no
+
+  HAVE_DIRECTVIV=no
+  HAVE_G2D=no
 fi
 
 AC_SUBST(GL_LIBS)
@@ -1314,6 +1337,8 @@ AM_CONDITIONAL(HAVE_WINDOW_WAYLAND, test "x$HAVE_WINDOW_WAYLAND" = "xyes")
 AM_CONDITIONAL(HAVE_WINDOW_ANDROID, test "x$HAVE_WINDOW_ANDROID" = "xyes")
 AM_CONDITIONAL(HAVE_WINDOW_EAGL, test "x$HAVE_WINDOW_EAGL" = "xyes")
 AM_CONDITIONAL(HAVE_WINDOW_FB, test "x$HAVE_WINDOW_FB" = "xyes")
+AM_CONDITIONAL(HAVE_DIRECTVIV, test "x$HAVE_DIRECTVIV" = "xyes")
+AM_CONDITIONAL(HAVE_PHYMEM, test "x$HAVE_DIRECTVIV" = "xyes" -a "x$HAVE_G2D" = "xyes")
 
 AM_CONDITIONAL(USE_OPENGL, test "x$USE_OPENGL" = "xyes")
 AM_CONDITIONAL(USE_GLES2, test "x$USE_GLES2" = "xyes")
diff --git a/ext/gl/gstgldownloadelement.c b/ext/gl/gstgldownloadelement.c
index 9ea0146..5662ea9 100644
--- a/ext/gl/gstgldownloadelement.c
+++ b/ext/gl/gstgldownloadelement.c
@@ -23,9 +23,12 @@
 #endif
 
 #include <gst/gl/gl.h>
-#include <gst/gl/gstglphymemory.h>
 #include "gstgldownloadelement.h"
 
+#if GST_GL_HAVE_PHYMEM
+#include <gst/gl/gstglphymemory.h>
+#endif
+
 GST_DEBUG_CATEGORY_STATIC (gst_gl_download_element_debug);
 #define GST_CAT_DEFAULT gst_gl_download_element_debug
 
@@ -170,6 +173,7 @@ gst_gl_download_element_prepare_output_buffer (GstBaseTransform * bt,
   gint i, n;
   GstGLMemory *glmem;
 
+#if GST_GL_HAVE_PHYMEM
   glmem = gst_buffer_peek_memory (inbuf, 0);
   if (gst_is_gl_physical_memory (glmem)) {
     GstGLContext *context = GST_GL_BASE_FILTER (bt)->context;
@@ -182,6 +186,7 @@ gst_gl_download_element_prepare_output_buffer (GstBaseTransform * bt,
 
     return GST_FLOW_OK;
   }
+#endif /* GST_GL_HAVE_PHYMEM */
 
   *outbuf = inbuf;
 
@@ -238,16 +243,19 @@ gst_gl_download_element_propose_allocation (GstBaseTransform * bt,
   GST_DEBUG_OBJECT (bt, "video format is %s", gst_video_format_to_string (GST_VIDEO_INFO_FORMAT (&info)));
 
   gst_allocation_params_init (&params);
+
+#if GST_GL_HAVE_PHYMEM
   if (gst_is_gl_physical_memory_supported_fmt (&info)) {
     allocator = gst_phy_mem_allocator_obtain ();
     GST_DEBUG_OBJECT (bt, "obtain physical memory allocator %p.", allocator);
   }
+#endif /* GST_GL_HAVE_PHYMEM */
 
   if (!allocator)
     allocator = gst_allocator_find (GST_GL_MEMORY_ALLOCATOR_NAME);
 
   if (!allocator) {
-    GST_ERROR_OBJECT (bt, "Can't obtain physical memory allocator.");
+    GST_ERROR_OBJECT (bt, "Can't obtain gl memory allocator.");
     return FALSE;
   }
 
diff --git a/gst-libs/gst/gl/Makefile.am b/gst-libs/gst/gl/Makefile.am
index 55f8a20..c52bba5 100644
--- a/gst-libs/gst/gl/Makefile.am
+++ b/gst-libs/gst/gl/Makefile.am
@@ -33,10 +33,16 @@ libgstgl_@GST_API_VERSION@_la_SOURCES = \
 	gstglviewconvert.c \
 	gstgloverlaycompositor.c \
 	gstglquery.c \
-	gstglvivdirecttexture.c \
-	gstglphymemory.c \
 	gstglcontrolbindingproxy.c
 
+if HAVE_DIRECTVIV
+libgstgl_@GST_API_VERSION@_la_SOURCES += gstglvivdirecttexture.c
+endif
+
+if HAVE_PHYMEM
+libgstgl_@GST_API_VERSION@_la_SOURCES += gstglphymemory.c
+endif
+
 libgstgl_@GST_API_VERSION@includedir = $(includedir)/gstreamer-@GST_API_VERSION@/gst/gl
 libgstgl_@GST_API_VERSION@include_HEADERS = \
 	gstglwindow.h \
@@ -68,10 +74,16 @@ libgstgl_@GST_API_VERSION@include_HEADERS = \
 	gstglcontrolbindingproxy.h \
 	gstgl_fwd.h \
 	gstgl_enums.h \
-	gstglvivdirecttexture.h \
-	gstglphymemory.h \
 	gl.h
 
+if HAVE_DIRECTVIV
+libgstgl_@GST_API_VERSION@include_HEADERS += gstglvivdirecttexture.h
+endif
+
+if HAVE_PHYMEM
+libgstgl_@GST_API_VERSION@include_HEADERS += gstglphymemory.h
+endif
+
 noinst_HEADERS = \
 	gstglsl_private.h \
 	utils/opengl_versions.h \
@@ -86,7 +98,9 @@ libgstgl_@GST_API_VERSION@_la_LIBADD = \
 	$(GST_LIBS) \
 	$(GL_LIBS)
 
+if HAVE_PHYMEM
 libgstgl_@GST_API_VERSION@_la_LIBADD += -lg2d
+endif
 
 if HAVE_WINDOW_WIN32
 SUBDIRS += win32
diff --git a/gst-libs/gst/gl/gstglbufferpool.c b/gst-libs/gst/gl/gstglbufferpool.c
index 71c726a..3e2fae0 100644
--- a/gst-libs/gst/gl/gstglbufferpool.c
+++ b/gst-libs/gst/gl/gstglbufferpool.c
@@ -292,6 +292,7 @@ gst_gl_buffer_pool_alloc (GstBufferPool * pool, GstBuffer ** buffer,
   }
 #endif
 
+#if GST_GL_HAVE_PHYMEM
   if ((g_strcmp0 (priv->allocator->mem_type, GST_GL_PHY_MEM_ALLOCATOR) == 0)) {
     GstAllocator* allocator = (GstAllocator*) gst_phy_mem_allocator_obtain ();
     if (!gst_gl_physical_memory_setup_buffer (allocator, buf, priv->gl_params)) {
@@ -301,6 +302,7 @@ gst_gl_buffer_pool_alloc (GstBufferPool * pool, GstBuffer ** buffer,
     *buffer = buf;
     return GST_FLOW_OK;
   }
+#endif
 
   alloc = GST_GL_MEMORY_ALLOCATOR (priv->allocator);
   if (!gst_gl_memory_setup_buffer (alloc, buf, priv->gl_params))
diff --git a/gst-libs/gst/gl/gstglupload.c b/gst-libs/gst/gl/gstglupload.c
index 99cc68a..4ea403d 100644
--- a/gst-libs/gst/gl/gstglupload.c
+++ b/gst-libs/gst/gl/gstglupload.c
@@ -23,7 +23,6 @@
 #endif
 
 #include <stdio.h>
-#include <gst/gl/gstglvivdirecttexture.h>
 
 #include "gl.h"
 #include "gstglupload.h"
@@ -36,6 +35,9 @@
 #include <gst/allocators/gstdmabuf.h>
 #endif
 
+#if GST_GL_HAVE_DIRECTVIV
+#include <gst/gl/gstglvivdirecttexture.h>
+#endif
 /**
  * SECTION:gstglupload
  * @short_description: an object that uploads to GL textures
@@ -1170,6 +1172,7 @@ static const UploadMethod _upload_meta_upload = {
   &_upload_meta_upload_free
 };
 
+#if GST_GL_HAVE_DIRECTVIV
 struct PhyBufferUpload
 {
   GstGLUpload *upload;
@@ -1303,6 +1306,7 @@ static const UploadMethod _physical_buffer_upload = {
   &_physical_buffer_upload_perform,
   &_physical_buffer_upload_free
 };
+#endif /* GST_GL_HAVE_DIRECTVIV */
 
 struct RawUploadFrame
 {
@@ -1526,7 +1530,11 @@ static const UploadMethod *upload_methods[] = { &_gl_memory_upload,
 #if GST_GL_HAVE_DMABUF
   &_dma_buf_upload,
 #endif
-  &_upload_meta_upload, &_physical_buffer_upload, &_raw_data_upload
+  &_upload_meta_upload,
+#if GST_GL_HAVE_DIRECTVIV
+  &_physical_buffer_upload,
+#endif
+  &_raw_data_upload
 };
 
 static GMutex upload_global_lock;
-- 
1.9.1

