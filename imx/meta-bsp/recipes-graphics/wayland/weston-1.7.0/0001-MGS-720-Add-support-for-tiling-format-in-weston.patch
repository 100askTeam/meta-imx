From e754abf37c9d2eae6163c0092c16d5420aca3f70 Mon Sep 17 00:00:00 2001
From: Prabhu Sundararaj <prabhu.sundararaj@freescale.com>
Date: Tue, 5 May 2015 17:00:05 -0500
Subject: [PATCH] MGS-720 : Add support for tiling format in weston

Add support for tiling surface formats if the GPU is supported.

Date: May 05, 2015
Signed-off-by: Prabhu Sundararaj <prabhu.sundararaj@freescale.com>
---
 src/gal2d-renderer.c | 87 ++++++++++++++++++++++++++--------------------------
 1 file changed, 44 insertions(+), 43 deletions(-)

diff --git a/src/gal2d-renderer.c b/src/gal2d-renderer.c
index dd667a4..4a1da29 100644
--- a/src/gal2d-renderer.c
+++ b/src/gal2d-renderer.c
@@ -344,22 +344,24 @@ make_current(struct gal2d_renderer *gr, gcoSURF surface)
 	gctUINT width = 0;
 	gctUINT height = 0;
 	gctINT stride = 0;
-	gctUINT32 physical;
+	gctUINT32 physical[3];
 	gctPOINTER va =0;
+    gceSURF_FORMAT format;
 
 	if(!surface)
 		goto OnError;
     
 
 	gcmONERROR(gcoSURF_GetAlignedSize(surface, &width, &height, &stride));
-    
-	gcmONERROR(gcoSURF_Lock(surface, &physical, (gctPOINTER *)&va));
-
-	gcmONERROR(gco2D_SetTargetEx(gr->gcoEngine2d, physical, stride,
-									gcvSURF_0_DEGREE, width, height));
-                                   
+    gcmONERROR(gcoSURF_GetFormat(surface, gcvNULL, &format));
+	gcmONERROR(gcoSURF_Lock(surface, &physical[0], (gctPOINTER *)&va));    
+    gco2D_SetGenericTarget(gr->gcoEngine2d, 
+                        &physical[0], 1, 
+                        &stride, 1, 
+                        gcvLINEAR, format,
+                        gcvSURF_0_DEGREE, width, height);
+	
 	gcmONERROR(gcoSURF_Unlock(surface, (gctPOINTER *)&va));
-    
 OnError:
     galONERROR(status);
 	return status;
@@ -527,18 +529,24 @@ update_surface(struct weston_output *output)
 
             gctUINT srcWidth = 0;
             gctUINT srcHeight = 0;
-            gctINT srcStride = 0;
             gceSURF_FORMAT srcFormat;;
             gcsRECT dstRect = {0};
             gcoSURF srcSurface = go->offscreenSurface;
-            gctUINT32 physical;
+            gctUINT32 srcPhyAddr[3];
+            gctUINT32 srcStride[3];
+
             gctPOINTER va =0;
 
-            gcmONERROR(gcoSURF_GetAlignedSize(srcSurface, &srcWidth, &srcHeight, &srcStride));
+            gcmONERROR(gcoSURF_GetAlignedSize(srcSurface, &srcWidth, &srcHeight, (gctINT *)&srcStride[0]));
             gcmONERROR(gcoSURF_GetFormat(srcSurface, gcvNULL, &srcFormat));
-            gcmONERROR(gcoSURF_Lock(srcSurface, &physical, (gctPOINTER *)&va));
-            gcmONERROR(gco2D_SetColorSource(gr->gcoEngine2d, physical, srcStride, srcFormat,
-                                gcvFALSE, srcWidth, gcvFALSE, gcvSURF_OPAQUE, 0));
+
+            gcmONERROR(gcoSURF_Lock(srcSurface, srcPhyAddr, (gctPOINTER *)&va));
+            gcmONERROR(gco2D_SetCurrentSourceIndex(gr->gcoEngine2d, 0U));
+
+            gco2D_SetGenericSource(gr->gcoEngine2d, srcPhyAddr, 1,
+				        srcStride, 1,
+				        gcvLINEAR, srcFormat, gcvSURF_0_DEGREE,
+				        srcWidth, srcHeight);
 
             dstRect.left 	= 0;
             dstRect.top		= 0;
@@ -662,6 +670,7 @@ repaint_region(struct weston_view *ev, struct weston_output *output, struct gal2
 	gcoSURF dstsurface;
 	int geoWidth = ev->surface->width;
 	int geoheight = ev->surface->height;
+    gceTILING tiling;
 
 	bb_rects = pixman_region32_rectangles(&ev->transform.boundingbox, &nbb);
 
@@ -699,9 +708,20 @@ repaint_region(struct weston_view *ev, struct weston_output *output, struct gal2
 	}
 	else
 	{
-		gcmVERIFY_OK(gco2D_SetColorSourceEx(gr->gcoEngine2d, srcPhyAddr[0], srcStride[0], srcFormat,
-						gcvFALSE, srcWidth, srcHeight, gcvFALSE, gcvSURF_OPAQUE, 0));
-		gcmVERIFY_OK(gco2D_SetSource(gr->gcoEngine2d, &srcRect));
+        gcoSURF_GetTiling(srcSurface, &tiling);
+        if (gcoHAL_IsFeatureAvailable(gr->gcoHal, gcvFEATURE_2D_TILING) != gcvTRUE)
+        {
+            weston_log("Tiling not supported \n");
+            status = gcvSTATUS_NOT_SUPPORTED;
+            gcmONERROR(status);
+        }
+        gco2D_SetGenericSource(gr->gcoEngine2d, srcPhyAddr, 1,
+				        srcStride, 1,
+				        tiling, srcFormat, gcvSURF_0_DEGREE,
+				        srcWidth, srcHeight);
+         /* Setup mirror. */
+        gcmONERROR(gco2D_SetBitBlitMirror(gr->gcoEngine2d, gcvFALSE, gcvFALSE));
+        gcmONERROR(gco2D_SetROP(gr->gcoEngine2d, 0xCC, 0xCC));
 	}
 
 	for (i = 0; i < nrects; i++)
@@ -870,7 +890,8 @@ draw_view(struct weston_view *ev, struct weston_output *output,
 	pixman_region32_subtract(&surface_blend, &surface_blend, &ev->surface->opaque);
 
     struct gal2d_renderer *gr = get_renderer(ec);
-    
+    gco2D_SetCurrentSourceIndex(gr->gcoEngine2d, 0U);
+
 	if (pixman_region32_not_empty(&ev->surface->opaque)) {
 		repaint_region(ev, output, go, &repaint, &ev->surface->opaque);
 	}
@@ -945,37 +966,17 @@ static void
 gal2d_renderer_attach_egl(struct weston_surface *es, struct weston_buffer *buffer)
 {
     gcsWL_VIV_BUFFER *vivBuffer = wl_resource_get_user_data(buffer->resource);
-    gctUINT width = 0;
-    gctUINT height = 0;
-    gctINT stride = 0;
-    gceSURF_FORMAT format;
     gcoSURF srcSurf = vivBuffer->surface;
-    gctUINT32 physical;
-    gctPOINTER va =0;
     gceSTATUS status = gcvSTATUS_OK;
     struct gal2d_surface_state *gs = get_surface_state(es);
-        
-    if(gs->gco_Surface == gcvNULL)
+
+    if(gs->gco_Surface != gcvNULL)
     {
-        /** Construct a wrapper. */
-        gcmONERROR(gcoSURF_ConstructWrapper(gcvNULL, &gs->gco_Surface));
+        gcmONERROR(gcoSURF_Destroy(gs->gco_Surface));
     }
 
-    gcmONERROR(gcoSURF_GetAlignedSize(srcSurf, &width, &height, &stride));
-    gcmONERROR(gcoSURF_GetFormat(srcSurf, gcvNULL, &format));
-    gcmONERROR(gcoSURF_Lock(srcSurf, &physical, (gctPOINTER *)&va));  
-
-    /* Set the buffer. */
-    gcmONERROR(gcoSURF_SetBuffer(gs->gco_Surface,
-                               gcvSURF_BITMAP_NO_VIDMEM,
-                               format,
-                               stride,
-                               (gctPOINTER) va,
-                               (gctUINT32) physical));
-
-    /* Set the window. */
-    gcmONERROR(gcoSURF_SetWindow(gs->gco_Surface, 0, 0, width, height));
-    
+    gs->gco_Surface = srcSurf;
+    gcoSURF_ReferenceSurface(srcSurf);
     buffer->width = vivBuffer->width;
     buffer->height = vivBuffer->height;
     
-- 
2.3.5

