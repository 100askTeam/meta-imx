diff --git a/EXA/src/vivante_exa/vivante_pixmap.c b/EXA/src/vivante_exa/vivante_pixmap.c
index ade88e2..dc02ce3 100755
--- a/EXA/src/vivante_exa/vivante_pixmap.c
+++ b/EXA/src/vivante_exa/vivante_pixmap.c
@@ -312,28 +312,7 @@ VivPrepareAccess(PixmapPtr pPix, int index) {
         // create an auxiliary linear buffer if the main buffer is tiled
         if(surf->mTiling != gcvLINEAR)
         {
-            GenericSurfacePtr linearSurf = (GenericSurfacePtr) vivpixmap->mLinearVidMemInfo;
-
-            if(linearSurf == NULL)
-            {
-                // allocate linear surface
-                VIVGPUPtr gpuctx = (VIVGPUPtr) pViv->mGrCtx.mGpu;
-                if(VIV2DGPUSurfaceAllocEx(gpuctx,
-                        surf->mAlignedWidth,
-                        surf->mAlignedHeight,
-                        surf->mBytesPerPixel,
-                        &linearSurf,
-                        getPixmapCachePolicy()))
-                {
-                    vivpixmap->mLinearVidMemInfo = linearSurf;
-                }
-                else
-                {
-                    vivpixmap->mLinearVidMemInfo = NULL;
-                    TRACE_ERROR("No memory available\n");
-                    TRACE_EXIT(FALSE);
-                }
-            }
+            VIV2DGPUSurfaceReAllocLinear(&pViv->mGrCtx,vivpixmap);
         }
 
         pPix->devPrivate.ptr = MapSurface(vivpixmap);
diff --git a/EXA/src/vivante_fbdev/vivante_fbdev_driver.c b/EXA/src/vivante_fbdev/vivante_fbdev_driver.c
index bf69619..063802a 100644
--- a/EXA/src/vivante_fbdev/vivante_fbdev_driver.c
+++ b/EXA/src/vivante_fbdev/vivante_fbdev_driver.c
@@ -42,6 +42,7 @@
 #include <sys/ioctl.h>
 #include <linux/fb.h>
 #include <xorg/shmint.h>
+#include <xorg/shadow.h>
 
 #define USE_VIV_FB
 
diff --git a/EXA/src/vivante_gal/vivante_gal.h b/EXA/src/vivante_gal/vivante_gal.h
index ddb5a65..181b6cb 100644
--- a/EXA/src/vivante_gal/vivante_gal.h
+++ b/EXA/src/vivante_gal/vivante_gal.h
@@ -266,6 +266,7 @@ extern "C" {
     Bool VIV2DCacheOperation(GALINFOPTR galInfo, Viv2DPixmapPtr ppix, VIVFLUSHTYPE flush_type, int onLinearBuffer);
     Bool VIV2DGPUUserMemMap(char* logical, unsigned int physical, unsigned int size, void ** mappingInfo, unsigned int * gpuAddress);
     Bool VIV2DGPUUserMemUnMap(char* logical, unsigned int size, void * mappingInfo, unsigned int gpuAddress);
+    Bool VIV2DGPUSurfaceReAllocLinear(GALINFOPTR galInfo, Viv2DPixmapPtr ppriv);
     Bool VIV2DGPUSurfaceReAllocNonCached(GALINFOPTR galInfo, Viv2DPixmapPtr ppriv);
     Bool MapUserMemToGPU(GALINFOPTR galInfo, MemMapInfoPtr mmInfo);
     void UnmapUserMem(GALINFOPTR galInfo, MemMapInfoPtr mmInfo);
diff --git a/EXA/src/vivante_gal/vivante_gal_surface.c b/EXA/src/vivante_gal/vivante_gal_surface.c
index e0f4ac7..db8f646 100644
--- a/EXA/src/vivante_gal/vivante_gal_surface.c
+++ b/EXA/src/vivante_gal/vivante_gal_surface.c
@@ -575,7 +575,7 @@ static gctBOOL FreeGPUSurface(VIVGPUPtr gpuctx, Viv2DPixmapPtr ppriv) {
     TRACE_EXIT(gcvTRUE);
 }
 
-gctBOOL VIV2DGPUSurfaceAllocEx(VIVGPUPtr gpuctx, gctUINT alignedWidth, gctUINT alignedHeight,
+static gctBOOL VIV2DGPUSurfaceAllocEx(VIVGPUPtr gpuctx, gctUINT alignedWidth, gctUINT alignedHeight,
     gctUINT bytesPerPixel, GenericSurfacePtr * surface, enum PixmapCachePolicy cachePolicy) {
     TRACE_ENTER();
     gceSTATUS status = gcvSTATUS_OK;
@@ -680,6 +680,37 @@ static gctBOOL VIV2DGPUSurfaceAlloc(VIVGPUPtr gpuctx, gctUINT alignedWidth, gctU
     return VIV2DGPUSurfaceAllocEx(gpuctx, alignedWidth, alignedHeight, bytesPerPixel, surface, getPixmapCachePolicy());
 }
 
+Bool VIV2DGPUSurfaceReAllocLinear(GALINFOPTR galInfo, Viv2DPixmapPtr ppriv) {
+    VIVGPUPtr gpuctx = (VIVGPUPtr)galInfo->mGpu;
+    GenericSurfacePtr oldSurf = gcvNULL;
+    GenericSurfacePtr linearSurf = gcvNULL;
+    gctUINT32 alignedWidth;
+    gctUINT32 alignedHeight;
+    gctUINT32 bpp;
+
+    oldSurf = (GenericSurfacePtr) (ppriv->mVidMemInfo);
+
+    if(oldSurf == gcvNULL)
+        return gcvFALSE;
+
+    /* save old size */
+    alignedWidth  = oldSurf->mAlignedWidth;
+    alignedHeight = oldSurf->mAlignedHeight;
+    bpp           = oldSurf->mBytesPerPixel;
+
+    /* create new surface */
+    if(VIV2DGPUSurfaceAlloc(gpuctx, alignedWidth, alignedHeight, bpp, &linearSurf))
+    {
+        ppriv->mLinearVidMemInfo = linearSurf;
+        return gcvTRUE;
+    }
+    else
+    {
+        TRACE_ERROR("Realloc Linear surface No memory available\n");
+        return gcvFALSE;
+    }
+}
+
 Bool VIV2DGPUSurfaceReAllocNonCached(GALINFOPTR galInfo, Viv2DPixmapPtr ppriv) {
     VIVGPUPtr gpuctx = (VIVGPUPtr)galInfo->mGpu;
     GenericSurfacePtr oldSurf = gcvNULL;
diff --git a/util/pandisplay/pandisplay.c b/util/pandisplay/pandisplay.c
index dc4d9af..d8cea25 100644
--- a/util/pandisplay/pandisplay.c
+++ b/util/pandisplay/pandisplay.c
@@ -22,6 +22,7 @@
 #include <memory.h>
 #include <errno.h>
 #include <unistd.h>
+#include <sys/time.h>
 #include <X11/Xlib.h>
 #include <X11/Xutil.h>
 #include <X11/Xlibint.h>
