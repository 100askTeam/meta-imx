From d66c41028cf76539af9a74ae2a6d54930cbf5ae3 Mon Sep 17 00:00:00 2001
From: Prabhu Sundararaj <prabhu.sundararaj@freescale.com>
Date: Wed, 20 Nov 2013 22:52:34 -0600
Subject: [PATCH 1/2] ENGR00288957-1 : Add Support for Wayland 1.3

Add support for i.MX6 SOC using 3D GPU

Signed-off-by: Prabhu Sundararaj <prabhu.sundararaj@freescale.com>
---
 clients/screenshot.c   |  4 ++--
 src/compositor-fbdev.c | 17 +++++++++++++++--
 2 files changed, 17 insertions(+), 4 deletions(-)

diff --git a/clients/screenshot.c b/clients/screenshot.c
index 2a6d9b3..b3890ba 100644
--- a/clients/screenshot.c
+++ b/clients/screenshot.c
@@ -222,11 +222,11 @@ write_png(int width, int height)
 		free(output);
 	}
 
-	surface = cairo_image_surface_create_for_data(data,
+	/*surface = cairo_image_surface_create_for_data(data,
 						      CAIRO_FORMAT_ARGB32,
 						      width, height, buffer_stride);
 	cairo_surface_write_to_png(surface, "wayland-screenshot.png");
-	cairo_surface_destroy(surface);
+	cairo_surface_destroy(surface);*/
 	free(data);
 }
 
diff --git a/src/compositor-fbdev.c b/src/compositor-fbdev.c
index 24140ef..5114295 100644
--- a/src/compositor-fbdev.c
+++ b/src/compositor-fbdev.c
@@ -53,6 +53,7 @@ struct fbdev_compositor {
 	struct udev_input input;
 	int use_pixman;
 	struct wl_listener session_listener;
+	NativeDisplayType display;
 };
 
 struct fbdev_screeninfo {
@@ -87,6 +88,7 @@ struct fbdev_output {
 	pixman_image_t *shadow_surface;
 	void *shadow_buf;
 	uint8_t depth;
+	NativeWindowType  window;
 };
 
 struct fbdev_parameters {
@@ -624,9 +626,15 @@ fbdev_output_create(struct fbdev_compositor *compositor,
 		if (pixman_renderer_output_create(&output->base) < 0)
 			goto out_shadow_surface;
 	} else {
+		output->window = fbCreateWindow(compositor->display, -1, -1, 0, 0);
+	    if (output->window == NULL) {
+	       fprintf(stderr, "failed to create window\n");
+	       return 0;
+	    }
+		
 		setenv("HYBRIS_EGLPLATFORM", "wayland", 1);
 		if (gl_renderer_output_create(&output->base,
-					(EGLNativeWindowType)NULL) < 0) {
+					(EGLNativeWindowType)output->window) < 0) {
 			weston_log("gl_renderer_output_create failed.\n");
 			goto out_shadow_surface;
 		}
@@ -917,7 +925,12 @@ fbdev_compositor_create(struct wl_display *display, int *argc, char *argv[],
 		if (pixman_renderer_init(&compositor->base) < 0)
 			goto out_launcher;
 	} else {
-		if (gl_renderer_create(&compositor->base, EGL_DEFAULT_DISPLAY,
+		compositor->display = fbGetDisplay(compositor->base.wl_display);
+	    if (compositor->display == NULL) {
+			weston_log("fbGetDisplay failed.\n");
+			goto out_launcher;
+	    }
+		if (gl_renderer_create(&compositor->base, compositor->display,
 			gl_renderer_opaque_attribs, NULL) < 0) {
 			weston_log("gl_renderer_create failed.\n");
 			goto out_launcher;
-- 
1.8.1.2

