Freescale's 3.10.17-1.0.0_beta Yocto BSP
==================================

This BSP is a Freescale release providing support for the following processors

   * Freescale i.MX6Q SABRE Smart Device (imx6qsabresd)
   * Freescale i.MX6Q SABRE Auto (imx6qsabreauto)
   * Freescale i.MX6DL SABRE Smart Device (imx6dlsabresd)
   * Freescale i.MX6DL SABRE Auto (imx6dlsabreauto)
   * Freescale i.MX6SOLO SABRE Smart Device(imx6solosabresd )
   * Freescale i.MX6SOLO SABRE Auto (imx6solosabreauto )
   * Freescale i.MX6 Solo Lite EVK (imx6slevk)

 * i.MX6 U-boot options based on 2013.04 u-boot
   * Freescale i.MX6SOLO SABRE Auto SPI-NOR (imx6solosabreauto-spi-nor )
   * Freescale i.MX6SOLO SABRE Auto NAND (imx6solosabreauto-nand )
   * Freescale i.MX6SOLO SABRE Auto EIM-NOR (imx6solosabreauto-eim-nor )
   * Freescale i.MX6DL SABRE Auto SPI-NOR (imx6dlsabreauto-spi-nor)
   * Freescale i.MX6DL SABRE Auto NAND (imx6dlsabreauto-nand)
   * Freescale i.MX6DL SABRE Auto EIM-NOR (imx6dlsabreauto-eim-nor)
   * Freescale i.MX6Q SABRE Auto SPI-NOR (imx6qsabreauto-spi-nor)
   * Freescale i.MX6Q SABRE Auto NAND (imx6qsabreauto-nand-nor)
   * Freescale i.MX6Q SABRE Auto EIM-NOR (imx6qsabreauto-eim-nor)
   * Freescale i.MX6Q SABRE SD SATA (imx6qsabresd-sata)
   * Freescale i.MX6Q SABRE Auto SATA (imx6qsabreauto-sata)

 * i.MX6 new Device Tree configurations
   * imx6q-sabresd-ldo.dtb
   * imx6dl-sabresd-ldo.dtb
   * imx6q-sabresd-hdcp.dtb
   * imx6dl-sabresd-hdcp.dtb
   * imx6q-sabreauto-ecspi.dtb
   * imx6dl-sabreauto-ecspi.dtb
   * imx6q-sabreauto-gpmi-weim.dtb
   * imx6dl-sabreauto-gpmi-weim.dtb
   * imx6sl-evk-ldo.dtb
   * imx6sl-evk-csi.dtb
   * imx6q-sabreauto-flexcan1.dtb
   * imx6dl-sabreauto-flexcan1.dtb

Quick Start Guide
-----------------
First install the Freescale Community BSP
$: repo init -u http://github.com/Freescale/fsl-community-bsp-platform -b dora

Copy the fsl-yocto-release-manifest.xml over the community manifest using the following instructions.
The fsl-yocto-release-manifest.xml is provided in the Freescale Yocto Release package for 3.10.17-1.0.0

First install the i.MX Freescale BSP repo
$: repo init -u git://git.freescale.com/imx/fsl-arm-yocto-bsp.git -b imx-3.14.38-6UL_ga

Download the Yocto Freescale Layers:
$: repo sync

Copy the new machine configuration files from meta-fsl-bsp-release into meta-fsl-arm
This is required for community setup to find the new machine configurations provided in 3.10.17-1.0.0_beta

$: cp -r sources/meta-fsl-bsp-release/imx/meta-fsl-arm/conf/machine sources/meta-fsl-arm/conf


Run Yocto Community Setup
$: MACHINE=< machine name> source setup-environment <build directory>
$: cd ..

Run 3.10.16-1.0.0 Release Layer setup
$: source fsl-setup-release.sh -b <build directory>  -e <backend fb, dfb or x11>

Build images
---------------------
Each graphical backend X11, Frame buffer, DirectFB and Wayland must be in a separate build 
directory, so the setup script above must be run for each backend to configure the build 
correctly.
In this release two image recipes are provided that work on almost all backends.

   fsl-image-gui provides a gui image without QT.
   fsl-image-qt5 provides a Qt5 image for X11, FB and Wayland backends.

Here are some examples:

Building X11
------------
  MACHINE=imx6qsabresd source fsl-setup-release.sh -b build-x11 -e x11
  bitbake fsl-image-gui
or
  bitbake fsl-image-qt5

To run the QT5 examples use the following parameters:
<QT5 example> -platform xcb -plugin evdevtouch:/dev/input/event0

Building Frame Buffer (FB)
---------------------------
  MACHINE=imx6qsabresd source fsl-setup-release.sh -b build-fb -e fb
  bitbake fsl-image-gui
or
  bitbake fsl-image-qt5

To run the QT5 examples use the following parameters:
<QT5 Example> -platform eglfs -plugin evdevtouch:/dev/input/event0

Building Direct FB (DFB)
---------------------------
  MACHINE=imx6qsabresd source fsl-setup-release.sh -b build-dfb -e dfb
  bitbake fsl-image-gui

Direct FB does not support QT5 for this release

Building Wayland-Weston (wayland)
---------------------------
  MACHINE=imx6qsabresd source fsl-setup-release.sh -b build-wayland -e wayland
  bitbake fsl-image-gui
or
  bitbake fsl-image-qt5

To run the QT5 examples use the following parameters:
<QT5 example> platform wayland-egl -plugin evdevtouch:/dev/input/event0 --fullscreen

Hardware Floating Point
-----------------------
This release enables hardware floating point.  This feature is enabled in both the machine 
configurations and in the layer.conf (because some machine files exist in community meta-fsl-arm.
DEFAULTTUNE_mx6 = "cortexa9hf-neon

To build with software floating point, add the following to local.conf
DEFAULTTUNE_mx6 = "cortexa9-neon"

We also provide some binaries with a software floating point version which we use based on FP_TAG in layer.conf.
This release was only tested for hardware floating point.

Restricted Codecs
-----------------
These codecs have contractual restrictions that require separate distribution.

Manufacturing Tool
------------------
The manufacturing tool image is provided in the 3.10.17-1.0.0_beta release.  This includes the fsl-image-manufacturing that is used
to flash the target device.  

End User License Agreement
--------------------------
During the Freescale Yocto Community BSP setup-environment process, the Freescale i.MX End User License Agreement (EULA) 
is displayed. To continue, users must agree to the conditions of this license. The agreement to the terms allows the 
Yocto build to untar packages from the Freescale mirror. Please read this license agreement carefully during the 
setup process because, once accepted, all further work in the Yocto environment is tied to this accepted agreement.

Chromium
---------
The Chromium browser requires additional layers added in the fsl-release-setup.sh script.   
To enable chromium requires the following steps

In local.conf 
- Add in chromium into your list
CORE_IMAGE_EXTRA_INSTALL += "chromium"

- Add the commercial white list into local.conf. 
LICENSE_FLAGS_WHITELIST="commercial"

- To enable rendering of WebGL do the following steps after boot.  Add the following lines to  /etc/profile or /usr/bin/google-chrome
export LD_PRELOAD=/usr/lib/libGAL.so:/usr/lib/libEGL.so:/usr/lib/libGLSLC.so:/usr/lib/libCLC.so:/usr/lib/libGLESv2.so

- Start the Chromium browser
$google-chrome --use-gl=egl 


